{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","style","overflowY","border","height","children","Card","id","name","email","className","src","alt","CardList","map","user","i","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","search_field","target","value","active_robots","fetch","then","response","json","people","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAQeA,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAO,SAApE,SACKJ,EAAMK,YCQJC,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACrB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,YACzD,6BAAKJ,IACL,4BAAIC,QCQDI,EAXE,SAAC,GAAa,IAAZb,EAAW,EAAXA,MACf,OACIA,EAAMc,KAAI,SAACC,EAAMC,GACb,OACI,cAAE,EAAF,CAAeT,GAAIP,EAAMgB,GAAGT,GAAIC,KAAMR,EAAMgB,GAAGR,KAAMC,MAAOT,EAAMgB,GAAGP,OAAzDO,OCGbC,EATG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKR,UAAU,MAAf,SACI,uBAAOA,UAAU,gCAAgCS,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCmBlGI,E,kDAnBX,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACGuB,MAAQ,CACTC,UAAU,GAHH,E,qDAOf,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAGjC,WACI,OAAIG,KAAKJ,MAAMC,SACJ,2DAEJG,KAAK3B,MAAMK,a,GAhBCwB,aCqDZC,E,kDA9Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAACK,aAAcD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACXa,cAAe,GACfH,aAAc,IAJJ,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAI,EAAKb,SAAS,CAACQ,cAAeK,S,oBAQhD,WAAU,IAAD,OAGDC,EAAiBf,KAAKJ,MAAMa,cAAcO,QAAO,SAAAC,GACrD,OAAOA,EAAMpC,KAAKqC,cAAcC,SAAS,EAAKvB,MAAMU,aAAaY,kBAGnE,OAAwC,IAApClB,KAAKJ,MAAMa,cAAcW,OACpB,oBAAIrC,UAAU,KAAd,wBAGL,sBAAKA,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAKH,GAAG,QAAtB,yBACA,cAAE,EAAF,CAAYW,aAAcS,KAAKI,iBAC/B,cAAE,EAAF,UACE,cAAC,EAAD,UACE,cAAE,EAAF,CAAW/B,MAAO0C,e,GApCdb,aCIHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7bb38d5.chunk.js","sourcesContent":["const Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '1px solid grey', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","const Card = ({id, name, email}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt='Profile'></img>\r\n            <h1>{name}</h1>\r\n            <p>{email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;","import Card from './Card';\r\n\r\nconst CardList = ({props}) => {\r\n    return (\r\n        props.map((user, i) => {\r\n            return (\r\n                < Card key={i} id={props[i].id} name={props[i].name} email={props[i].email}/>\r\n            );\r\n        })\r\n    );\r\n    }\r\n\r\n\r\nexport default CardList;","const SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 b--green bg-lightest-blue' type='search' placeholder='Search robots' onChange={searchChange}></input>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchBox;","import { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props); \r\n            this.state = {\r\n                hasError: false\r\n            }\r\n        }\r\n\r\n        componentDidCatch(error, info) {\r\n            this.setState({hasError: true})\r\n        }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooopps! That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import { Component } from 'react';\r\nimport './App.css';\r\nimport 'tachyons';\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      active_robots: [],\r\n      search_field: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(people => this.setState({active_robots: people})\r\n    );\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({search_field: event.target.value})\r\n    \r\n    }\r\n\r\n  render() {\r\n    //Can make much cleaner:\r\n    // const {active_robots, search_field} = this.state;\r\n    const filteredRobots = this.state.active_robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(this.state.search_field.toLowerCase())\r\n    })\r\n\r\n    if (this.state.active_robots.length === 0) {\r\n      return <h1 className='tc'>Loading...</h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1 className='f1' id='title' >Robofriends</h1>\r\n          < SearchBox searchChange={this.onSearchChange}/>\r\n          < Scroll>\r\n            <ErrorBoundry>\r\n              < CardList props={filteredRobots}/>\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}